const { Sequelize } = require('sequelize');

async function testDatabaseConnection() {
  console.log('๐ง ุงุฎุชุจุงุฑ ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช...\n');

  try {
    // ุงุณุชุฎุฏุงู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
    const databaseUrl = process.env.DATABASE_URL || process.env.DB_URL || 'postgres://postgres:password@localhost:5432/accounting_system';
    
    console.log('1๏ธโฃ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...');
    const sequelize = new Sequelize(databaseUrl);
    
    await sequelize.authenticate();
    console.log('โ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุชุตูุฉ ุจูุฌุงุญ');

    // ุงุฎุชุจุงุฑ ุงุณุชุนูุงู ุจุณูุท
    console.log('\n2๏ธโฃ ุงุฎุชุจุงุฑ ุงุณุชุนูุงู ุจุณูุท...');
    const result = await sequelize.query('SELECT 1 as test', { type: sequelize.QueryTypes.SELECT });
    console.log('โ ุงุณุชุนูุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุนูู:', result[0].test === 1);

    // ุงุฎุชุจุงุฑ ุงูุฌุฏุงูู
    console.log('\n3๏ธโฃ ุงุฎุชุจุงุฑ ุงูุฌุฏุงูู...');
    const tables = await sequelize.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      ORDER BY table_name
    `, { type: sequelize.QueryTypes.SELECT });

    console.log(`โ ุชู ุงูุนุซูุฑ ุนูู ${tables.length} ุฌุฏูู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช`);
    
    // ุนุฑุถ ุจุนุถ ุงูุฌุฏุงูู ุงููููุฉ
    const importantTables = tables.filter(table => 
      ['users', 'customers', 'accounts', 'sales_invoices', 'gl_entries'].includes(table.table_name)
    );
    
    if (importantTables.length > 0) {
      console.log('๐ ุงูุฌุฏุงูู ุงููููุฉ:');
      importantTables.forEach(table => {
        console.log(`   โ ${table.table_name}`);
      });
    }

    await sequelize.close();
    console.log('\nโ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุบููุฉ');

    // 4. ุฎูุงุฑุงุช ุงูุชุดุบูู
    console.log('\n4๏ธโฃ ุฎูุงุฑุงุช ุงูุชุดุบูู...');
    
    const options = [
      'npm run dev:db - ุฎุงุฏู ูุน ูุงุนุฏุฉ ุงูุจูุงูุงุช',
      'npm run dev:fixed - ุฎุงุฏู ูุญุฏุซ',
      'npm run dev:simple - ุฎุงุฏู ูุจุณุท',
      'node server/src/server-database.js - ูุจุงุดุฑ'
    ];

    options.forEach((option, index) => {
      console.log(`   ${index + 1}. ${option}`);
    });

    // 5. ููุฎุต ุงููุชุงุฆุฌ
    console.log('\n๐ฏ ููุฎุต ุงููุชุงุฆุฌ:');
    console.log('โ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุชุตูุฉ ุจูุฌุงุญ');
    console.log('โ ุงูุฌุฏุงูู ููุฌูุฏุฉ');
    console.log('โ ุงูุฎุงุฏู ุฌุงูุฒ ููุนูู');
    console.log('โ ุฌููุน ุงูู APIs ุณุชุนูู');

    console.log('\n๐ ููููู ุงูุขู ุชุดุบูู ุงูุฎุงุฏู:');
    console.log('   npm run dev:db');
    console.log('   ุฃู');
    console.log('   node server/src/server-database.js');

    console.log('\nโจ ุงููุธุงู ุฌุงูุฒ ููุนูู ูุน ูุงุนุฏุฉ ุงูุจูุงูุงุช!');

  } catch (error) {
    console.log('โ ุฎุทุฃ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช:', error.message);
    console.log('\n๐ง ุญููู ููุชุฑุญุฉ:');
    console.log('   1. ุชุฃูุฏ ูู ุชุดุบูู PostgreSQL');
    console.log('   2. ุชุฃูุฏ ูู ุตุญุฉ ูุชุบูุฑุงุช ุงูุจูุฆุฉ');
    console.log('   3. ุชุฃูุฏ ูู ูุฌูุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช');
    console.log('   4. ุงุณุชุฎุฏู npm run dev:simple ููุนูู ุจุฏูู ูุงุนุฏุฉ ุงูุจูุงูุงุช');
  }
}

testDatabaseConnection().catch(console.error);
