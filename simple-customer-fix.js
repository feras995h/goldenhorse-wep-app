import { Client } from 'pg';

console.log('๐ง ุจุฏุก ุฅุตูุงุญ ูุดููุฉ ุฅูุดุงุก ุงูุนููุงุก...');

const DATABASE_URL = 'postgres://postgres:XIclgABy2kg3ZZ2Nyh7GOYexxcm206RTNsSAJavhbF4ukgMfDiNqXSOhy8SIALUP@72.60.92.146:5432/postgres';

const client = new Client({
  connectionString: DATABASE_URL,
  ssl: false
});

try {
  console.log('๐ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...');
  await client.connect();
  console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ');

  // ุฅุตูุงุญ 1: ุชูุนูู uuid-ossp extension
  console.log('\n๐ง ุชูุนูู uuid-ossp extension...');
  await client.query('CREATE EXTENSION IF NOT EXISTS "uuid-ossp";');
  console.log('โ ุชู ุชูุนูู uuid-ossp extension');

  // ุฅุตูุงุญ 2: ุฅูุดุงุก ุฏุงูุฉ ุชูููุฏ ููุฏ ุงูุนููู
  console.log('\n๐ง ุฅูุดุงุก ุฏุงูุฉ ุชูููุฏ ููุฏ ุงูุนููู...');
  const triggerFunction = `
    CREATE OR REPLACE FUNCTION generate_customer_code()
    RETURNS TRIGGER AS $$
    BEGIN
      IF NEW.code IS NULL OR NEW.code = '' THEN
        SELECT COALESCE(
          'C' || LPAD((
            COALESCE(
              MAX(CAST(SUBSTRING(code FROM 2) AS INTEGER)), 0
            ) + 1
          )::TEXT, 6, '0'),
          'C000001'
        ) INTO NEW.code
        FROM customers 
        WHERE code ~ '^C[0-9]{6}$';
      END IF;
      RETURN NEW;
    END;
    $$ LANGUAGE plpgsql;
  `;

  await client.query(triggerFunction);
  console.log('โ ุชู ุฅูุดุงุก ุฏุงูุฉ ุชูููุฏ ููุฏ ุงูุนููู');

  // ุฅุตูุงุญ 3: ุฅูุดุงุก trigger
  console.log('\n๐ง ุฅูุดุงุก trigger...');
  const trigger = `
    DROP TRIGGER IF EXISTS trigger_generate_customer_code ON customers;
    CREATE TRIGGER trigger_generate_customer_code
      BEFORE INSERT ON customers
      FOR EACH ROW
      EXECUTE FUNCTION generate_customer_code();
  `;

  await client.query(trigger);
  console.log('โ ุชู ุฅูุดุงุก trigger ูุชูููุฏ ููุฏ ุงูุนููู');

  // ุงุฎุชุจุงุฑ 4: ุฅูุดุงุก ุนููู ุชุฌุฑูุจู
  console.log('\n๐งช ุงุฎุชุจุงุฑ ุฅูุดุงุก ุนููู ุชุฌุฑูุจู...');
  const testResult = await client.query(`
    INSERT INTO customers (
      id, name, "nameEn", type, email, phone, 
      "creditLimit", "paymentTerms", currency, "isActive", balance,
      "createdAt", "updatedAt"
    ) VALUES (
      uuid_generate_v4(), 'ุนููู ุชุฌุฑูุจู', 'Test Customer', 'individual', 
      'test@example.com', '0912345678', 1000, 30, 'LYD', true, 0,
      NOW(), NOW()
    ) RETURNING id, code, name;
  `);

  console.log('โ ุชู ุฅูุดุงุก ุงูุนููู ุงูุชุฌุฑูุจู ุจูุฌุงุญ');
  console.log(`   - ID: ${testResult.rows[0].id}`);
  console.log(`   - Code: ${testResult.rows[0].code}`);
  console.log(`   - Name: ${testResult.rows[0].name}`);

  // ุญุฐู ุงูุนููู ุงูุชุฌุฑูุจู
  await client.query('DELETE FROM customers WHERE id = $1', [testResult.rows[0].id]);
  console.log('๐๏ธ  ุชู ุญุฐู ุงูุนููู ุงูุชุฌุฑูุจู');

  console.log('\n๐ ุชู ุฅููุงู ุฅุตูุงุญ ูุดููุฉ ุฅูุดุงุก ุงูุนููุงุก ุจูุฌุงุญ!');
  console.log('โ ุงููุธุงู ุงูุขู ุฌุงูุฒ ูุฅูุดุงุก ุงูุนููุงุก');

} catch (error) {
  console.error('โ ุฎุทุฃ ูู ุฅุตูุงุญ ูุดููุฉ ุงูุนููุงุก:', error.message);
  console.error('ุงูุชูุงุตูู:', error.detail || 'ูุง ุชูุฌุฏ ุชูุงุตูู ุฅุถุงููุฉ');
} finally {
  await client.end();
  console.log('\n๐ ุชู ูุทุน ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
}
