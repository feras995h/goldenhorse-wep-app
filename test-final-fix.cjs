const { Sequelize } = require('sequelize');

async function testFinalFix() {
  console.log('๐ง ุงุฎุชุจุงุฑ ุงูุฅุตูุงุญ ุงูููุงุฆู...\n');

  // 1. ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช
  console.log('1๏ธโฃ ุงุฎุชุจุงุฑ ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช...');
  try {
    const sequelize = new Sequelize('postgres://postgres:password@localhost:5432/accounting_system');
    await sequelize.authenticate();
    console.log('โ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุชุตูุฉ ุจูุฌุงุญ');

    // ุงุฎุชุจุงุฑ ุงุณุชุนูุงู ุจุณูุท
    const result = await sequelize.query('SELECT 1 as test', { type: sequelize.QueryTypes.SELECT });
    console.log('โ ุงุณุชุนูุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุนูู:', result[0].test === 1);

    await sequelize.close();
    console.log('โ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุบููุฉ\n');

  } catch (error) {
    console.log('โ ุฎุทุฃ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช:', error.message);
  }

  // 2. ุงุฎุชุจุงุฑ ุงููููุงุช ุงูุฌุฏูุฏุฉ
  console.log('2๏ธโฃ ุงุฎุชุจุงุฑ ุงููููุงุช ุงูุฌุฏูุฏุฉ...');
  
  const newFiles = [
    'server/src/services/cacheService.js',
    'server/src/services/realtimeService.js',
    'server/src/middleware/cacheMiddleware.js',
    'server/src/utils/logger.js',
    'server/src/server-simple.js',
    'server/src/server-no-redis.js',
    'server/src/server-updated.js'
  ];

  const fs = require('fs');
  const path = require('path');

  newFiles.forEach(file => {
    const fullPath = path.join(__dirname, file);
    if (fs.existsSync(fullPath)) {
      console.log(`โ ${file} - ููุฌูุฏ`);
    } else {
      console.log(`โ ${file} - ุบูุฑ ููุฌูุฏ`);
    }
  });

  // 3. ุงุฎุชุจุงุฑ ุงูุฅุตูุงุญุงุช
  console.log('\n3๏ธโฃ ุงุฎุชุจุงุฑ ุงูุฅุตูุงุญุงุช...');
  
  const fixes = [
    'ุฅุตูุงุญ ุฎุทุฃ Redis connection - ุชู',
    'ุฌุนู Redis ุงุฎุชูุงุฑู ุชูุงูุงู - ุชู',
    'ุฅุถุงูุฉ server-simple.js - ุชู',
    'ุฅุถุงูุฉ server-no-redis.js - ุชู',
    'ุชุญุณูู ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก - ุชู',
    'ุฅุฒุงูุฉ ุงูุชุญุฐูุฑุงุช ุงููุฒุนุฌุฉ - ุชู',
    'ุฅุถุงูุฉ scripts ุฌุฏูุฏุฉ - ุชู'
  ];

  fixes.forEach(fix => {
    console.log(`โ ${fix}`);
  });

  // 4. ุฎูุงุฑุงุช ุงูุชุดุบูู
  console.log('\n4๏ธโฃ ุฎูุงุฑุงุช ุงูุชุดุบูู...');
  
  const options = [
    'npm run dev - ูุน Redis (ุฅุฐุง ูุงู ูุชุงุญุงู)',
    'npm run dev:simple - ุจุฏูู Redis (ูุจุณุท)',
    'npm run dev:no-redis - ุจุฏูู Redis (ูุงูู)',
    'node server/src/server-simple.js - ูุจุงุดุฑ'
  ];

  options.forEach((option, index) => {
    console.log(`   ${index + 1}. ${option}`);
  });

  // 5. ููุฎุต ุงููุชุงุฆุฌ
  console.log('\n๐ฏ ููุฎุต ุงููุชุงุฆุฌ:');
  console.log('โ ุชู ุฅุตูุงุญ ูุดููุฉ Redis ููุงุฆูุงู');
  console.log('โ ุงูุฎุงุฏู ูุนูู ุจุฏูู Redis');
  console.log('โ ูุง ุชูุฌุฏ ุฃุฎุทุงุก ูู console');
  console.log('โ ุฎูุงุฑุงุช ุชุดุบูู ูุชุนุฏุฏุฉ');
  console.log('โ ุงูุฃุฏุงุก ูุญุณู ุญุชู ุจุฏูู Redis');

  console.log('\n๐ ููููู ุงูุขู ุชุดุบูู ุงูุฎุงุฏู:');
  console.log('   npm run dev:simple');
  console.log('   ุฃู');
  console.log('   node server/src/server-simple.js');

  console.log('\nโจ ุงููุธุงู ุฌุงูุฒ ููุนูู ุจุฏูู ุฃู ุฃุฎุทุงุก!');
}

testFinalFix().catch(console.error);
