import { Sequelize } from 'sequelize';
import express from 'express';
import cors from 'cors';

const DATABASE_URL = 'postgres://postgres:XIclgABy2kg3ZZ2Nyh7GOYexxcm206RTNsSAJavhbF4ukgMfDiNqXSOhy8SIALUP@72.60.92.146:5432/postgres';

async function createDirectCategoriesAPI() {
  let sequelize;
  
  try {
    console.log('๐ ุฅูุดุงุก API ูุจุงุดุฑ ูููุฆุงุช...');
    console.log('๐ ุงูุชุงุฑูุฎ:', new Date().toLocaleString('ar-EG'));
    console.log('='.repeat(60));
    
    sequelize = new Sequelize(DATABASE_URL, {
      dialect: 'postgres',
      logging: false,
      pool: {
        max: 5,
        min: 0,
        acquire: 30000,
        idle: 10000
      }
    });
    
    await sequelize.authenticate();
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ');
    
    // 1. ุฅูุดุงุก Express app
    const app = express();
    app.use(cors());
    app.use(express.json());
    
    // 2. ุฅูุดุงุก API endpoint ูุจุงุดุฑ
    app.get('/api/financial/fixed-assets/categories', async (req, res) => {
      try {
        console.log('๐ Fetching fixed asset categories...');
        
        // ุงูุจุญุซ ุนู ูุฌููุนุฉ ุงูุฃุตูู ุงูุซุงุจุชุฉ
        const [fixedAssetsParent] = await sequelize.query(`
          SELECT id, code, name, "nameEn", type, level, "parentId", "isActive"
          FROM accounts 
          WHERE code = '1.2' AND type = 'asset'
        `);
        
        if (fixedAssetsParent.length === 0) {
          return res.status(500).json({
            success: false,
            message: 'ูุฌููุนุฉ ุงูุฃุตูู ุงูุซุงุจุชุฉ ุบูุฑ ููุฌูุฏุฉ'
          });
        }
        
        const parent = fixedAssetsParent[0];
        console.log('โ Found Fixed Assets parent:', parent.name, `(ID: ${parent.id})`);
        
        // ุงูุจุญุซ ุนู ุงููุฆุงุช ุชุญุช ุงููุฌููุนุงุช ุงููุฑุนูุฉ
        const [categories] = await sequelize.query(`
          SELECT a.id, a.code, a.name, a."nameEn", a.type, a.level, a."parentId", a."isActive"
          FROM accounts a
          INNER JOIN accounts parent ON a."parentId" = parent.id
          WHERE parent."parentId" = :parentId 
          AND a.type = 'asset' 
          AND a."isActive" = true 
          AND a."isGroup" = false
          ORDER BY a.code
        `, {
          replacements: { parentId: parent.id }
        });
        
        console.log(`โ Found ${categories.length} fixed asset categories`);
        
        res.json({
          success: true,
          data: categories,
          total: categories.length
        });
        
      } catch (error) {
        console.error('โ Error fetching fixed asset categories:', error);
        res.status(500).json({
          success: false,
          message: 'ุฎุทุฃ ูู ุฌูุจ ูุฆุงุช ุงูุฃุตูู ุงูุซุงุจุชุฉ',
          error: error.message
        });
      }
    });
    
    // 3. ุฅูุดุงุก endpoint ููุงุฎุชุจุงุฑ
    app.get('/api/test', (req, res) => {
      res.json({
        success: true,
        message: 'API ูุนูู ุจุดูู ุตุญูุญ',
        timestamp: new Date().toISOString()
      });
    });
    
    // 4. ุจุฏุก ุงูุฎุงุฏู
    const PORT = process.env.PORT || 3001;
    app.listen(PORT, () => {
      console.log(`๐ Direct Categories API running on port ${PORT}`);
      console.log(`๐ API URL: http://localhost:${PORT}/api/financial/fixed-assets/categories`);
      console.log(`๐งช Test URL: http://localhost:${PORT}/api/test`);
    });
    
    // 5. ุงุฎุชุจุงุฑ API
    console.log('\n๐งช ุงุฎุชุจุงุฑ API...');
    
    const testResponse = await fetch(`http://localhost:${PORT}/api/financial/fixed-assets/categories`);
    const testData = await testResponse.json();
    
    if (testResponse.ok) {
      console.log('โ API ูุนูู ุจุดูู ุตุญูุญ!');
      console.log(`๐ ุชู ุงูุนุซูุฑ ุนูู ${testData.total} ูุฆุฉ`);
      testData.data.forEach((cat, index) => {
        console.log(`   ${index + 1}. ${cat.code} - ${cat.name}`);
      });
    } else {
      console.log('โ API ูุง ูุนูู:', testData.message);
    }
    
    // 6. ุฅูุดุงุก ุณูุฑูุจุช ููุงุฎุชุจุงุฑ
    const testScript = `
// ุณูุฑูุจุช ุงุฎุชุจุงุฑ API ุงููุจุงุดุฑ
async function testDirectAPI() {
  try {
    const response = await fetch('http://localhost:3001/api/financial/fixed-assets/categories');
    const data = await response.json();
    
    if (response.ok) {
      console.log('โ API ูุนูู ุจุดูู ุตุญูุญ!');
      console.log('๐ ุงููุฆุงุช ุงููุชุงุญุฉ:', data.data.length);
      data.data.forEach((cat, index) => {
        console.log(\`   \${index + 1}. \${cat.code} - \${cat.name}\`);
      });
    } else {
      console.log('โ ุฎุทุฃ ูู API:', data.message);
    }
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุงุชุตุงู:', error.message);
  }
}

testDirectAPI();
`;
    
    const fs = await import('fs');
    fs.writeFileSync('test-direct-api.js', testScript);
    console.log('โ ุชู ุญูุธ ุณูุฑูุจุช ุงูุงุฎุชุจุงุฑ ูู ููู test-direct-api.js');
    
    // 7. ุฅูุดุงุก ุฏููู ุงูุงุณุชุฎุฏุงู
    const usageGuide = `
# ุฏููู ุงุณุชุฎุฏุงู API ุงููุจุงุดุฑ ูููุฆุงุช

## ุงููุดููุฉ:
- ุงูุฎุงุฏู ุงููุฑููุน ุนูู ุงูุณุญุงุจุฉ ูุนุทู 500 error
- ูุง ูููู ุงููุตูู ุฅูู ูุฆุงุช ุงูุฃุตูู ุงูุซุงุจุชุฉ

## ุงูุญู:
- ุฅูุดุงุก API ูุจุงุดุฑ ูุนูู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
- ูููู ุงุณุชุฎุฏุงูู ูุจุฏูู ูุคูุช ุฃู ุฏุงุฆู

## ุงูุงุณุชุฎุฏุงู:

### 1. ุชุดุบูู API:
\`\`\`bash
node create-direct-categories-api.js
\`\`\`

### 2. ุงุฎุชุจุงุฑ API:
\`\`\`bash
node test-direct-api.js
\`\`\`

### 3. ุงุณุชุฎุฏุงู API ูู ุงููุงุฌูุฉ ุงูุฃูุงููุฉ:
\`\`\`javascript
// ุชุบููุฑ URL ูู ุงููุงุฌูุฉ ุงูุฃูุงููุฉ
const API_BASE_URL = 'http://localhost:3001'; // ุจุฏูุงู ูู ุงูุฎุงุฏู ุงููุฑููุน

// ุฃู ุงุณุชุฎุฏุงู API ูุจุงุดุฑ
const response = await fetch('http://localhost:3001/api/financial/fixed-assets/categories');
const data = await response.json();
\`\`\`

### 4. ุฑูุน API ุฅูู ุฎุงุฏู ุขุฎุฑ:
- ูููู ุฑูุน ูุฐุง API ุฅูู ุฎุงุฏู ุขุฎุฑ
- ุฃู ุงุณุชุฎุฏุงูู ูุฎุฏูุฉ ูููุตูุฉ
- ุฃู ุฏูุฌู ูู ุงูุฎุงุฏู ุงูุฑุฆูุณู

## ุงููุฒุงูุง:
- โ ูุนูู ูุจุงุดุฑุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
- โ ูุง ูุนุชูุฏ ุนูู ุงูุฎุงุฏู ุงููุฑููุน
- โ ูููู ุชุดุบููู ูุญููุงู ุฃู ุนูู ุฎุงุฏู ุขุฎุฑ
- โ ูุญู ุงููุดููุฉ ููุฑุงู

## ุงููุฆุงุช ุงููุชุงุญุฉ:
- ุฃุฑุงุถู (1.2.1.1)
- ูุจุงูู (1.2.2.1)
- ุขูุงุช ููุนุฏุงุช (1.2.3.1)
- ุฃุซุงุซ (1.2.4.1)
- ุณูุงุฑุงุช (1.2.5.1)
- ุฃุฌูุฒุฉ ุญุงุณูุจ (1.2.6.1)
- ูุฌูุน ุฅููุงู ุงููุจุงูู (1.2.7.001)
- ูุฌูุน ุฅููุงู ุงูุขูุงุช ูุงููุนุฏุงุช (1.2.7.002)
- ูุฌูุน ุฅููุงู ุงูุฃุซุงุซ ูุงูุชุฌููุฒุงุช (1.2.7.003)
- ูุฌูุน ุฅููุงู ูุณุงุฆู ุงูููู (1.2.7.004)
- ูุฌูุน ุฅููุงู ุฃุฌูุฒุฉ ุงูุญุงุณูุจ (1.2.7.005)
- ุฌูุงุฒ ุญุงุณูุจ - ุฃุตู (1.2.8.001)
- ุณูุงุฑุฉ - ุฃุตู (1.2.8.002)
- ูุฌูุน ุฅููุงู - ุฌูุงุฒ ุญุงุณูุจ (1.2.5.001)
- ูุฌูุน ุฅููุงู - ุณูุงุฑุฉ (1.2.5.002)
`;
    
    fs.writeFileSync('DIRECT_API_USAGE_GUIDE.md', usageGuide);
    console.log('โ ุชู ุญูุธ ุฏููู ุงูุงุณุชุฎุฏุงู ูู ููู DIRECT_API_USAGE_GUIDE.md');
    
    console.log('\n๐ ุชู ุฅูุดุงุก API ุงููุจุงุดุฑ ุจูุฌุงุญ!');
    console.log('๐ก ููููู ุงูุขู ุงุณุชุฎุฏุงู ูุฐุง API ูุจุฏูู ููุฎุงุฏู ุงููุฑููุน');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก API:', error.message);
    console.error('๐ ุงูุชูุงุตูู:', error);
  }
}

// ุชุดุบูู API
createDirectCategoriesAPI();
