import { v4 as uuidv4 } from 'uuid';

/**
 * Seeder ูุญุฏุซ ููุญุณุงุจุงุช ุงูุฑุฆูุณูุฉ ุงูุงูุชุฑุงุถูุฉ
 * Updated Default Main Accounts Seeder - Golden Horse Shipping System
 */

// ุงูุญุณุงุจุงุช ุงูุฑุฆูุณูุฉ ุงูุงูุชุฑุงุถูุฉ ูููุงู ููุชุตููู ุงููุญุงุณุจู ุงูุชูููุฏู
const DEFAULT_MAIN_ACCOUNTS = [
  {
    id: uuidv4(),
    code: '1',
    name: 'ุงูุฃุตูู',
    nameEn: 'Assets',
    type: 'asset',
    rootType: 'Asset',
    reportType: 'Balance Sheet',
    accountType: 'main',
    nature: 'debit',
    level: 1,
    isGroup: true,
    isActive: true,
    balance: 0.00,
    currency: 'LYD',
    description: 'ุงูุญุณุงุจ ุงูุฑุฆูุณู ููุฃุตูู - ูุดูู ุฌููุน ุงูุฃุตูู ุงููููููุฉ ููุดุฑูุฉ',
    isSystemAccount: true,
    isMonitored: false,
    freezeAccount: false,
    parentId: null,
    createdAt: new Date(),
    updatedAt: new Date()
  },
  {
    id: uuidv4(),
    code: '2',
    name: 'ุงููุตุฑููุงุช',
    nameEn: 'Expenses',
    type: 'expense',
    rootType: 'Expense',
    reportType: 'Profit and Loss',
    accountType: 'main',
    nature: 'debit',
    level: 1,
    isGroup: true,
    isActive: true,
    balance: 0.00,
    currency: 'LYD',
    description: 'ุงูุญุณุงุจ ุงูุฑุฆูุณู ูููุตุฑููุงุช - ูุดูู ุฌููุน ุงููุตุฑููุงุช ุงูุชุดุบูููุฉ ูุงูุฅุฏุงุฑูุฉ',
    isSystemAccount: true,
    isMonitored: false,
    freezeAccount: false,
    parentId: null,
    createdAt: new Date(),
    updatedAt: new Date()
  },
  {
    id: uuidv4(),
    code: '3',
    name: 'ุงูุงูุชุฒุงูุงุช',
    nameEn: 'Liabilities',
    type: 'liability',
    rootType: 'Liability',
    reportType: 'Balance Sheet',
    accountType: 'main',
    nature: 'credit',
    level: 1,
    isGroup: true,
    isActive: true,
    balance: 0.00,
    currency: 'LYD',
    description: 'ุงูุญุณุงุจ ุงูุฑุฆูุณู ููุงูุชุฒุงูุงุช - ูุดูู ุฌููุน ุงูุฏููู ูุงูุงูุชุฒุงูุงุช ุงููุงููุฉ',
    isSystemAccount: true,
    isMonitored: false,
    freezeAccount: false,
    parentId: null,
    createdAt: new Date(),
    updatedAt: new Date()
  },
  {
    id: uuidv4(),
    code: '4',
    name: 'ุญููู ุงูููููุฉ',
    nameEn: 'Equity',
    type: 'equity',
    rootType: 'Equity',
    reportType: 'Balance Sheet',
    accountType: 'main',
    nature: 'credit',
    level: 1,
    isGroup: true,
    isActive: true,
    balance: 0.00,
    currency: 'LYD',
    description: 'ุงูุญุณุงุจ ุงูุฑุฆูุณู ูุญููู ุงูููููุฉ - ูุดูู ุฑุฃุณ ุงููุงู ูุงูุฃุฑุจุงุญ ุงููุญุชุฌุฒุฉ',
    isSystemAccount: true,
    isMonitored: false,
    freezeAccount: false,
    parentId: null,
    createdAt: new Date(),
    updatedAt: new Date()
  },
  {
    id: uuidv4(),
    code: '5',
    name: 'ุงูุฅูุฑุงุฏุงุช',
    nameEn: 'Revenue',
    type: 'revenue',
    rootType: 'Income',
    reportType: 'Profit and Loss',
    accountType: 'main',
    nature: 'credit',
    level: 1,
    isGroup: true,
    isActive: true,
    balance: 0.00,
    currency: 'LYD',
    description: 'ุงูุญุณุงุจ ุงูุฑุฆูุณู ููุฅูุฑุงุฏุงุช - ูุดูู ุฌููุน ุงูุฅูุฑุงุฏุงุช ูู ุงููุจูุนุงุช ูุงูุฎุฏูุงุช',
    isSystemAccount: true,
    isMonitored: false,
    freezeAccount: false,
    parentId: null,
    createdAt: new Date(),
    updatedAt: new Date()
  }
];

// ุงููุณุชุฎุฏููู ุงูุงูุชุฑุงุถููู
const DEFAULT_USERS = [
  {
    id: uuidv4(),
    username: 'admin',
    password: '$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password: admin123
    name: 'ูุฏูุฑ ุงููุธุงู',
    role: 'admin',
    isActive: true,
    createdAt: new Date(),
    updatedAt: new Date()
  },
  {
    id: uuidv4(),
    username: 'financial',
    password: '$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password: financial123
    name: 'ูุฏูุฑ ูุงูู',
    role: 'financial_manager',
    isActive: true,
    createdAt: new Date(),
    updatedAt: new Date()
  },
  {
    id: uuidv4(),
    username: 'sales',
    password: '$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password: sales123
    name: 'ูุฏูุฑ ูุจูุนุงุช',
    role: 'sales_manager',
    isActive: true,
    createdAt: new Date(),
    updatedAt: new Date()
  },
  {
    id: uuidv4(),
    username: 'user',
    password: '$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password: user123
    name: 'ูุณุชุฎุฏู ุนุงุฏู',
    role: 'user',
    isActive: true,
    createdAt: new Date(),
    updatedAt: new Date()
  }
];

export async function up(queryInterface, Sequelize) {
  console.log('๐ฑ ุฅูุดุงุก ุงูุจูุงูุงุช ุงูุงูุชุฑุงุถูุฉ...');
  
  try {
    // ุฅูุดุงุก ุงููุณุชุฎุฏููู ุงูุงูุชุฑุงุถููู
    console.log('๐ฅ ุฅูุดุงุก ุงููุณุชุฎุฏููู ุงูุงูุชุฑุงุถููู...');
    const existingUsers = await queryInterface.sequelize.query(
      'SELECT username FROM users ORDER BY username',
      { type: Sequelize.QueryTypes.SELECT }
    );
    
    const existingUsernames = existingUsers.map(user => user.username);
    console.log(`๐ ุงููุณุชุฎุฏููู ุงูููุฌูุฏูู: ${existingUsernames.join(', ') || 'ูุง ููุฌุฏ'}`);
    
    const usersToCreate = DEFAULT_USERS.filter(
      user => !existingUsernames.includes(user.username)
    );
    
    if (usersToCreate.length > 0) {
      await queryInterface.bulkInsert('users', usersToCreate);
      console.log(`โ ุชู ุฅูุดุงุก ${usersToCreate.length} ูุณุชุฎุฏู ุฌุฏูุฏ`);
      usersToCreate.forEach(user => {
        console.log(`  โ ${user.username} - ${user.name} (${user.role})`);
      });
    } else {
      console.log('โ ุฌููุน ุงููุณุชุฎุฏููู ุงูุงูุชุฑุงุถููู ููุฌูุฏูู ุจุงููุนู');
    }

    // ุฅูุดุงุก ุงูุญุณุงุจุงุช ุงูุฑุฆูุณูุฉ
    console.log('๐ฐ ุฅูุดุงุก ุงูุญุณุงุจุงุช ุงูุฑุฆูุณูุฉ ุงูุงูุชุฑุงุถูุฉ...');
    const existingAccounts = await queryInterface.sequelize.query(
      'SELECT code FROM accounts WHERE level = 1 ORDER BY code',
      { type: Sequelize.QueryTypes.SELECT }
    );
    
    const existingCodes = existingAccounts.map(acc => acc.code);
    console.log(`๐ ุงูุญุณุงุจุงุช ุงูุฑุฆูุณูุฉ ุงูููุฌูุฏุฉ: ${existingCodes.join(', ') || 'ูุง ุชูุฌุฏ'}`);
    
    const accountsToCreate = DEFAULT_MAIN_ACCOUNTS.filter(
      account => !existingCodes.includes(account.code)
    );
    
    if (accountsToCreate.length > 0) {
      await queryInterface.bulkInsert('accounts', accountsToCreate);
      console.log(`โ ุชู ุฅูุดุงุก ${accountsToCreate.length} ุญุณุงุจ ุฑุฆูุณู ุฌุฏูุฏ`);
      accountsToCreate.forEach(account => {
        console.log(`  โ ${account.code} - ${account.name} (${account.type}) - ุทุจูุนุฉ: ${account.nature}`);
      });
    } else {
      console.log('โ ุฌููุน ุงูุญุณุงุจุงุช ุงูุฑุฆูุณูุฉ ููุฌูุฏุฉ ุจุงููุนู');
    }
    
    console.log('๐ ุชู ุฅูุดุงุก ุงูุจูุงูุงุช ุงูุงูุชุฑุงุถูุฉ ุจูุฌุงุญ');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุจูุงูุงุช ุงูุงูุชุฑุงุถูุฉ:', error.message);
    throw error;
  }
}

export async function down(queryInterface, Sequelize) {
  console.log('๐๏ธ ุญุฐู ุงูุจูุงูุงุช ุงูุงูุชุฑุงุถูุฉ...');
  
  try {
    // ุญุฐู ุงูุญุณุงุจุงุช ุงูุฑุฆูุณูุฉ
    const codes = DEFAULT_MAIN_ACCOUNTS.map(account => account.code);
    await queryInterface.bulkDelete('accounts', {
      code: {
        [Sequelize.Op.in]: codes
      },
      isSystemAccount: true
    });
    
    // ุญุฐู ุงููุณุชุฎุฏููู ุงูุงูุชุฑุงุถููู
    const usernames = DEFAULT_USERS.map(user => user.username);
    await queryInterface.bulkDelete('users', {
      username: {
        [Sequelize.Op.in]: usernames
      }
    });
    
    console.log('โ ุชู ุญุฐู ุงูุจูุงูุงุช ุงูุงูุชุฑุงุถูุฉ');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุญุฐู ุงูุจูุงูุงุช ุงูุงูุชุฑุงุถูุฉ:', error.message);
    throw error;
  }
}

// ุชุตุฏูุฑ ุงูุจูุงูุงุช ููุงุณุชุฎุฏุงู ูู ุฃูุงูู ุฃุฎุฑู
export { DEFAULT_MAIN_ACCOUNTS, DEFAULT_USERS };
