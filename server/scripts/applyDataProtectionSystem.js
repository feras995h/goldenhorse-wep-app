#!/usr/bin/env node

import { Sequelize } from 'sequelize';
import dotenv from 'dotenv';

// ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
dotenv.config();

const DATABASE_URL = process.env.DATABASE_URL || 'postgres://postgres:XIclgABy2kg3ZZ2Nyh7GOYexxcm206RTNsSAJavhbF4ukgMfDiNqXSOhy8SIALUP@72.60.92.146:5432/golden_horse_dev';

const sequelize = new Sequelize(DATABASE_URL, {
  dialect: 'postgres',
  logging: console.log,
  dialectOptions: {
    ssl: false
  }
});

async function applyDataProtectionSystem() {
  console.log('๐ก๏ธ ุจุฏุก ุชุทุจูู ูุธุงู ููุน ุงูุญุฐู ููุจูุงูุงุช ุงูุญุฑุฌุฉ...');
  
  try {
    await sequelize.authenticate();
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');

    // 1. ุฅูุดุงุก ุฌุฏูู ุณุฌู ุงูุญุฐู
    console.log('\n๐ ุฅูุดุงุก ุฌุฏูู ุณุฌู ุงูุญุฐู...');
    
    await sequelize.query(`
      CREATE TABLE IF NOT EXISTS deletion_log (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        "tableName" VARCHAR(100) NOT NULL,
        "recordId" UUID NOT NULL,
        "recordData" JSONB NOT NULL,
        "deletionReason" TEXT,
        "deletedBy" UUID REFERENCES users(id),
        "deletedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        "isRecoverable" BOOLEAN DEFAULT TRUE,
        "recoveredAt" TIMESTAMP,
        "recoveredBy" UUID REFERENCES users(id)
      );
    `);
    
    await sequelize.query(`
      CREATE INDEX IF NOT EXISTS idx_deletion_log_table ON deletion_log("tableName");
      CREATE INDEX IF NOT EXISTS idx_deletion_log_record ON deletion_log("recordId");
      CREATE INDEX IF NOT EXISTS idx_deletion_log_date ON deletion_log("deletedAt");
      CREATE INDEX IF NOT EXISTS idx_deletion_log_recoverable ON deletion_log("isRecoverable");
    `);
    
    console.log('โ ุชู ุฅูุดุงุก ุฌุฏูู ุณุฌู ุงูุญุฐู');

    // 2. ุฅูุดุงุก ุฏุงูุฉ ุญูุงูุฉ ุงูุญุณุงุจุงุช ุงูุฑุฆูุณูุฉ
    console.log('\n๐ฆ ุฅูุดุงุก ุญูุงูุฉ ุงูุญุณุงุจุงุช ุงูุฑุฆูุณูุฉ...');
    
    await sequelize.query(`
      CREATE OR REPLACE FUNCTION protect_main_accounts()
      RETURNS TRIGGER AS $$
      BEGIN
        -- ููุน ุญุฐู ุงูุญุณุงุจุงุช ุงูุฑุฆูุณูุฉ (1,2,3,4,5)
        IF OLD.code IN ('1', '2', '3', '4', '5') THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูุญุณุงุจุงุช ุงูุฑุฆูุณูุฉ (%). ูุฐู ุงูุญุณุงุจุงุช ูุญููุฉ ูู ุงูุญุฐู.', OLD.code;
        END IF;
        
        -- ููุน ุญุฐู ุงูุญุณุงุจุงุช ุงูุชู ููุง ุฃุฑุตุฏุฉ
        IF ABS(OLD.balance) > 0.01 THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูุญุณุงุจ (%) ูุฃูู ูุญุชูู ุนูู ุฑุตูุฏ: %. ูุฌุจ ุชุตููุฑ ุงูุฑุตูุฏ ุฃููุงู.', OLD.name, OLD.balance;
        END IF;
        
        -- ููุน ุญุฐู ุงูุญุณุงุจุงุช ุงูุชู ููุง ุญุฑูุงุช
        IF EXISTS (
          SELECT 1 FROM journal_entry_details 
          WHERE "accountId" = OLD.id 
          LIMIT 1
        ) THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูุญุณุงุจ (%) ูุฃูู ูุญุชูู ุนูู ุญุฑูุงุช ูุญุงุณุจูุฉ. ุงุณุชุฎุฏู ุฅูุบุงุก ุงูุชูุนูู ุจุฏูุงู ูู ุงูุญุฐู.', OLD.name;
        END IF;
        
        -- ููุน ุญุฐู ุงูุญุณุงุจุงุช ุงููุฑุชุจุทุฉ ุจุงูุนููุงุก
        IF EXISTS (
          SELECT 1 FROM customers 
          WHERE "accountId" = OLD.id 
          LIMIT 1
        ) THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูุญุณุงุจ (%) ูุฃูู ูุฑุชุจุท ุจุนููุงุก. ูุฌุจ ุฅูุบุงุก ุงูุฑุจุท ุฃููุงู.', OLD.name;
        END IF;
        
        -- ููุน ุญุฐู ุงูุญุณุงุจุงุช ุงููุฑุชุจุทุฉ ุจุงูุฃุตูู ุงูุซุงุจุชุฉ
        IF EXISTS (
          SELECT 1 FROM fixed_assets 
          WHERE "assetAccountId" = OLD.id 
             OR "depreciationExpenseAccountId" = OLD.id 
             OR "accumulatedDepreciationAccountId" = OLD.id
          LIMIT 1
        ) THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูุญุณุงุจ (%) ูุฃูู ูุฑุชุจุท ุจุฃุตูู ุซุงุจุชุฉ. ูุฌุจ ุฅูุบุงุก ุงูุฑุจุท ุฃููุงู.', OLD.name;
        END IF;
        
        -- ุชุณุฌูู ุงูุญุฐู ูู ุงูุณุฌู
        INSERT INTO deletion_log ("tableName", "recordId", "recordData", "deletedBy")
        VALUES ('accounts', OLD.id, to_jsonb(OLD), NULL);
        
        RETURN OLD;
      END;
      $$ LANGUAGE plpgsql;
    `);
    
    await sequelize.query(`
      DROP TRIGGER IF EXISTS protect_main_accounts_deletion ON accounts;
      CREATE TRIGGER protect_main_accounts_deletion
      BEFORE DELETE ON accounts
      FOR EACH ROW
      EXECUTE FUNCTION protect_main_accounts();
    `);
    
    console.log('โ ุชู ุฅูุดุงุก ุญูุงูุฉ ุงูุญุณุงุจุงุช ุงูุฑุฆูุณูุฉ');

    // 3. ุฅูุดุงุก ุญูุงูุฉ ุงููููุฏ ุงููุฑุญูุฉ
    console.log('\n๐ ุฅูุดุงุก ุญูุงูุฉ ุงููููุฏ ุงููุฑุญูุฉ...');
    
    await sequelize.query(`
      CREATE OR REPLACE FUNCTION protect_posted_entries()
      RETURNS TRIGGER AS $$
      BEGIN
        -- ููุน ุญุฐู ุงููููุฏ ุงููุฑุญูุฉ
        IF OLD.status = 'posted' THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูููุฏ ุงููุฑุญู (%). ุงุณุชุฎุฏู ุนูุณ ุงูููุฏ ููุชุตุญูุญ.', OLD."entryNumber";
        END IF;
        
        -- ููุน ุญุฐู ูููุฏ ุงูุงูุชุชุงุญ
        IF OLD."isOpeningEntry" = TRUE THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ููุฏ ุงูุงูุชุชุงุญ (%). ุงุณุชุฎุฏู ูููุฏ ุงูุชุณููุฉ ููุชุนุฏูู.', OLD."entryNumber";
        END IF;
        
        -- ููุน ุญุฐู ูููุฏ ุงูุฅููุงู
        IF OLD."isDepreciationEntry" = TRUE THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ููุฏ ุงูุฅููุงู (%). ุงุณุชุฎุฏู ุนูุณ ุงูููุฏ ููุชุตุญูุญ.', OLD."entryNumber";
        END IF;
        
        -- ููุน ุญุฐู ุงููููุฏ ูู ุงููุชุฑุงุช ุงูููููุฉ
        IF EXISTS (
          SELECT 1 FROM accounting_periods 
          WHERE EXTRACT(YEAR FROM OLD.date) = year 
            AND EXTRACT(MONTH FROM OLD.date) = month 
            AND status IN ('closed', 'archived')
          LIMIT 1
        ) THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูููุฏ (%) ูุฃูู ูู ูุชุฑุฉ ููููุฉ.', OLD."entryNumber";
        END IF;
        
        -- ุชุณุฌูู ุงูุญุฐู ูู ุงูุณุฌู
        INSERT INTO deletion_log ("tableName", "recordId", "recordData", "deletedBy")
        VALUES ('journal_entries', OLD.id, to_jsonb(OLD), OLD."postedBy");
        
        RETURN OLD;
      END;
      $$ LANGUAGE plpgsql;
    `);
    
    await sequelize.query(`
      DROP TRIGGER IF EXISTS protect_posted_entries_deletion ON journal_entries;
      CREATE TRIGGER protect_posted_entries_deletion
      BEFORE DELETE ON journal_entries
      FOR EACH ROW
      EXECUTE FUNCTION protect_posted_entries();
    `);
    
    console.log('โ ุชู ุฅูุดุงุก ุญูุงูุฉ ุงููููุฏ ุงููุฑุญูุฉ');

    // 4. ุฅูุดุงุก ุญูุงูุฉ ุงูููุงุชูุฑ ุงูููุชููุฉ
    console.log('\n๐งพ ุฅูุดุงุก ุญูุงูุฉ ุงูููุงุชูุฑ ุงูููุชููุฉ...');
    
    await sequelize.query(`
      CREATE OR REPLACE FUNCTION protect_completed_invoices()
      RETURNS TRIGGER AS $$
      BEGIN
        -- ููุน ุญุฐู ุงูููุงุชูุฑ ุงูููุชููุฉ
        IF OLD.status = 'completed' THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงููุงุชูุฑุฉ ุงูููุชููุฉ (%). ุงุณุชุฎุฏู ุฅูุบุงุก ุงููุงุชูุฑุฉ ููุชุตุญูุญ.', OLD."invoiceNumber";
        END IF;
        
        -- ููุน ุญุฐู ุงูููุงุชูุฑ ุงููุฏููุนุฉ
        IF OLD."paidAmount" > 0 THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงููุงุชูุฑุฉ (%) ูุฃููุง ุชุญุชูู ุนูู ูุฏููุนุงุช ุจูููุฉ %. ูุฌุจ ุนูุณ ุงููุฏููุนุงุช ุฃููุงู.', OLD."invoiceNumber", OLD."paidAmount";
        END IF;
        
        -- ููุน ุญุฐู ุงูููุงุชูุฑ ุงููุฑุชุจุทุฉ ุจูููุฏ ูุญุงุณุจูุฉ
        IF OLD."journalEntryId" IS NOT NULL THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงููุงุชูุฑุฉ (%) ูุฃููุง ูุฑุชุจุทุฉ ุจููุฏ ูุญุงุณุจู. ูุฌุจ ุญุฐู ุงูููุฏ ุฃููุงู.', OLD."invoiceNumber";
        END IF;
        
        -- ุชุณุฌูู ุงูุญุฐู ูู ุงูุณุฌู
        INSERT INTO deletion_log ("tableName", "recordId", "recordData", "deletedBy")
        VALUES ('invoices', OLD.id, to_jsonb(OLD), NULL);
        
        RETURN OLD;
      END;
      $$ LANGUAGE plpgsql;
    `);
    
    await sequelize.query(`
      DROP TRIGGER IF EXISTS protect_completed_invoices_deletion ON invoices;
      CREATE TRIGGER protect_completed_invoices_deletion
      BEFORE DELETE ON invoices
      FOR EACH ROW
      EXECUTE FUNCTION protect_completed_invoices();
    `);
    
    console.log('โ ุชู ุฅูุดุงุก ุญูุงูุฉ ุงูููุงุชูุฑ ุงูููุชููุฉ');

    // 5. ุฅูุดุงุก ุญูุงูุฉ ุงูุนููุงุก ุงููุดุทูู
    console.log('\n๐ฅ ุฅูุดุงุก ุญูุงูุฉ ุงูุนููุงุก ุงููุดุทูู...');
    
    await sequelize.query(`
      CREATE OR REPLACE FUNCTION protect_active_customers()
      RETURNS TRIGGER AS $$
      BEGIN
        -- ููุน ุญุฐู ุงูุนููุงุก ุงูุฐูู ูุฏููู ููุงุชูุฑ
        IF EXISTS (
          SELECT 1 FROM invoices 
          WHERE "customerId" = OLD.id 
          LIMIT 1
        ) THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูุนููู (%) ูุฃูู ูุญุชูู ุนูู ููุงุชูุฑ. ุงุณุชุฎุฏู ุฅูุบุงุก ุงูุชูุนูู ุจุฏูุงู ูู ุงูุญุฐู.', OLD.name;
        END IF;
        
        -- ููุน ุญุฐู ุงูุนููุงุก ุงูุฐูู ูุฏููู ุฃุฑุตุฏุฉ
        IF OLD."accountId" IS NOT NULL THEN
          DECLARE
            account_balance DECIMAL(15,2);
          BEGIN
            SELECT balance INTO account_balance FROM accounts WHERE id = OLD."accountId";
            IF ABS(account_balance) > 0.01 THEN
              RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูุนููู (%) ูุฃู ุญุณุงุจู ูุญุชูู ุนูู ุฑุตูุฏ: %. ูุฌุจ ุชุตููุฑ ุงูุฑุตูุฏ ุฃููุงู.', OLD.name, account_balance;
            END IF;
          END;
        END IF;
        
        -- ููุน ุญุฐู ุงูุนููุงุก ุงูุฐูู ูุฏููู ุญุฑูุงุช ูุญุงุณุจูุฉ
        IF OLD."accountId" IS NOT NULL AND EXISTS (
          SELECT 1 FROM journal_entry_details 
          WHERE "accountId" = OLD."accountId" 
          LIMIT 1
        ) THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูุนููู (%) ูุฃู ุญุณุงุจู ูุญุชูู ุนูู ุญุฑูุงุช ูุญุงุณุจูุฉ. ุงุณุชุฎุฏู ุฅูุบุงุก ุงูุชูุนูู ุจุฏูุงู ูู ุงูุญุฐู.', OLD.name;
        END IF;
        
        -- ุชุณุฌูู ุงูุญุฐู ูู ุงูุณุฌู
        INSERT INTO deletion_log ("tableName", "recordId", "recordData", "deletedBy")
        VALUES ('customers', OLD.id, to_jsonb(OLD), NULL);
        
        RETURN OLD;
      END;
      $$ LANGUAGE plpgsql;
    `);
    
    await sequelize.query(`
      DROP TRIGGER IF EXISTS protect_active_customers_deletion ON customers;
      CREATE TRIGGER protect_active_customers_deletion
      BEFORE DELETE ON customers
      FOR EACH ROW
      EXECUTE FUNCTION protect_active_customers();
    `);
    
    console.log('โ ุชู ุฅูุดุงุก ุญูุงูุฉ ุงูุนููุงุก ุงููุดุทูู');

    // 6. ุฅูุดุงุก ุญูุงูุฉ ุงูุฃุตูู ุงูุซุงุจุชุฉ
    console.log('\n๐ข ุฅูุดุงุก ุญูุงูุฉ ุงูุฃุตูู ุงูุซุงุจุชุฉ...');
    
    await sequelize.query(`
      CREATE OR REPLACE FUNCTION protect_fixed_assets()
      RETURNS TRIGGER AS $$
      BEGIN
        -- ููุน ุญุฐู ุงูุฃุตูู ุงููุดุทุฉ
        IF OLD.status = 'active' THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูุฃุตู ุงูุซุงุจุช ุงููุดุท (%). ูุฌุจ ุชุบููุฑ ุงูุญุงูุฉ ุฅูู "ูุชููู" ุฃููุงู.', OLD.name;
        END IF;
        
        -- ููุน ุญุฐู ุงูุฃุตูู ุงูุชู ููุง ุฌุฏููุฉ ุฅููุงู
        IF EXISTS (
          SELECT 1 FROM depreciation_schedules 
          WHERE "fixedAssetId" = OLD.id 
          LIMIT 1
        ) THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูุฃุตู ุงูุซุงุจุช (%) ูุฃูู ูุญุชูู ุนูู ุฌุฏููุฉ ุฅููุงู. ูุฌุจ ุญุฐู ุงูุฌุฏููุฉ ุฃููุงู.', OLD.name;
        END IF;
        
        -- ููุน ุญุฐู ุงูุฃุตูู ุงููุฑุชุจุทุฉ ุจูููุฏ ูุญุงุณุจูุฉ
        IF EXISTS (
          SELECT 1 FROM journal_entry_details jed
          JOIN accounts a ON jed."accountId" = a.id
          WHERE a.id IN (OLD."assetAccountId", OLD."depreciationExpenseAccountId", OLD."accumulatedDepreciationAccountId")
          LIMIT 1
        ) THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูุฃุตู ุงูุซุงุจุช (%) ูุฃูู ูุฑุชุจุท ุจุญุฑูุงุช ูุญุงุณุจูุฉ.', OLD.name;
        END IF;
        
        -- ุชุณุฌูู ุงูุญุฐู ูู ุงูุณุฌู
        INSERT INTO deletion_log ("tableName", "recordId", "recordData", "deletedBy")
        VALUES ('fixed_assets', OLD.id, to_jsonb(OLD), NULL);
        
        RETURN OLD;
      END;
      $$ LANGUAGE plpgsql;
    `);
    
    await sequelize.query(`
      DROP TRIGGER IF EXISTS protect_fixed_assets_deletion ON fixed_assets;
      CREATE TRIGGER protect_fixed_assets_deletion
      BEFORE DELETE ON fixed_assets
      FOR EACH ROW
      EXECUTE FUNCTION protect_fixed_assets();
    `);
    
    console.log('โ ุชู ุฅูุดุงุก ุญูุงูุฉ ุงูุฃุตูู ุงูุซุงุจุชุฉ');

    // 7. ุฅูุดุงุก ุญูุงูุฉ ุงูุนููุงุช ูุงูุฃุณุนุงุฑ
    console.log('\n๐ฑ ุฅูุดุงุก ุญูุงูุฉ ุงูุนููุงุช ูุงูุฃุณุนุงุฑ...');
    
    await sequelize.query(`
      CREATE OR REPLACE FUNCTION protect_currencies()
      RETURNS TRIGGER AS $$
      BEGIN
        -- ููุน ุญุฐู ุงูุนููุฉ ุงูุฃุณุงุณูุฉ
        IF OLD."isBaseCurrency" = TRUE THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูุนููุฉ ุงูุฃุณุงุณูุฉ (%). ูุฌุจ ุชุนููู ุนููุฉ ุฃุณุงุณูุฉ ุฃุฎุฑู ุฃููุงู.', OLD.name;
        END IF;
        
        -- ููุน ุญุฐู ุงูุนููุงุช ุงููุณุชุฎุฏูุฉ ูู ุงูุญุณุงุจุงุช
        IF EXISTS (
          SELECT 1 FROM accounts 
          WHERE "currencyId" = OLD.id 
          LIMIT 1
        ) THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูุนููุฉ (%) ูุฃููุง ูุณุชุฎุฏูุฉ ูู ุญุณุงุจุงุช. ูุฌุจ ุชุบููุฑ ุนููุฉ ุงูุญุณุงุจุงุช ุฃููุงู.', OLD.name;
        END IF;
        
        -- ููุน ุญุฐู ุงูุนููุงุช ุงููุณุชุฎุฏูุฉ ูู ุงููููุฏ
        IF EXISTS (
          SELECT 1 FROM journal_entries 
          WHERE "currencyId" = OLD.id 
          LIMIT 1
        ) THEN
          RAISE EXCEPTION 'ูุง ูููู ุญุฐู ุงูุนููุฉ (%) ูุฃููุง ูุณุชุฎุฏูุฉ ูู ูููุฏ ูุญุงุณุจูุฉ.', OLD.name;
        END IF;
        
        -- ุชุณุฌูู ุงูุญุฐู ูู ุงูุณุฌู
        INSERT INTO deletion_log ("tableName", "recordId", "recordData", "deletedBy")
        VALUES ('currencies', OLD.id, to_jsonb(OLD), NULL);
        
        RETURN OLD;
      END;
      $$ LANGUAGE plpgsql;
    `);
    
    await sequelize.query(`
      DROP TRIGGER IF EXISTS protect_currencies_deletion ON currencies;
      CREATE TRIGGER protect_currencies_deletion
      BEFORE DELETE ON currencies
      FOR EACH ROW
      EXECUTE FUNCTION protect_currencies();
    `);
    
    console.log('โ ุชู ุฅูุดุงุก ุญูุงูุฉ ุงูุนููุงุช');

    // 8. ุฅูุดุงุก ุฏุงูุฉ ุงุณุชุฑุฏุงุฏ ุงูุจูุงูุงุช ุงููุญุฐููุฉ
    console.log('\n๐ ุฅูุดุงุก ุฏุงูุฉ ุงุณุชุฑุฏุงุฏ ุงูุจูุงูุงุช...');
    
    await sequelize.query(`
      CREATE OR REPLACE FUNCTION recover_deleted_record(
        deletion_log_id UUID,
        recovered_by_user UUID
      )
      RETURNS BOOLEAN AS $$
      DECLARE
        log_record RECORD;
        recovery_sql TEXT;
      BEGIN
        -- ุงูุญุตูู ุนูู ุณุฌู ุงูุญุฐู
        SELECT * INTO log_record
        FROM deletion_log
        WHERE id = deletion_log_id
          AND "isRecoverable" = TRUE
          AND "recoveredAt" IS NULL;
        
        IF NOT FOUND THEN
          RAISE EXCEPTION 'ุณุฌู ุงูุญุฐู ุบูุฑ ููุฌูุฏ ุฃู ุบูุฑ ูุงุจู ููุงุณุชุฑุฏุงุฏ';
        END IF;
        
        -- ุจูุงุก ุงุณุชุนูุงู ุงูุงุณุชุฑุฏุงุฏ (ูุจุณุท - ูุญุชุงุฌ ุชุทููุฑ ุฃูุซุฑ)
        recovery_sql := 'INSERT INTO ' || log_record."tableName" || ' SELECT * FROM jsonb_populate_record(NULL::' || log_record."tableName" || ', $1)';
        
        -- ุชูููุฐ ุงูุงุณุชุฑุฏุงุฏ (ูุญุชุงุฌ ูุนุงูุฌุฉ ุฃูุซุฑ ุชุนููุฏุงู)
        -- EXECUTE recovery_sql USING log_record."recordData";
        
        -- ุชุญุฏูุซ ุณุฌู ุงูุญุฐู
        UPDATE deletion_log
        SET 
          "recoveredAt" = CURRENT_TIMESTAMP,
          "recoveredBy" = recovered_by_user,
          "isRecoverable" = FALSE
        WHERE id = deletion_log_id;
        
        RETURN TRUE;
      END;
      $$ LANGUAGE plpgsql;
    `);
    
    console.log('โ ุชู ุฅูุดุงุก ุฏุงูุฉ ุงุณุชุฑุฏุงุฏ ุงูุจูุงูุงุช');

    console.log('\n๐ ุชู ุชุทุจูู ูุธุงู ููุน ุงูุญุฐู ููุจูุงูุงุช ุงูุญุฑุฌุฉ ุจูุฌุงุญ!');
    
    // ุนุฑุถ ููุฎุต ุงููุธุงู
    console.log('\n๐ ููุฎุต ูุธุงู ุญูุงูุฉ ุงูุจูุงูุงุช:');
    console.log('1. โ ุฌุฏูู ุณุฌู ุงูุญุฐู ูุน ุฅููุงููุฉ ุงูุงุณุชุฑุฏุงุฏ');
    console.log('2. โ ุญูุงูุฉ ุงูุญุณุงุจุงุช ุงูุฑุฆูุณูุฉ ูุงูุญุณุงุจุงุช ุฐุงุช ุงูุฃุฑุตุฏุฉ');
    console.log('3. โ ุญูุงูุฉ ุงููููุฏ ุงููุฑุญูุฉ ููููุฏ ุงูุงูุชุชุงุญ ูุงูุฅููุงู');
    console.log('4. โ ุญูุงูุฉ ุงูููุงุชูุฑ ุงูููุชููุฉ ูุงููุฏููุนุฉ');
    console.log('5. โ ุญูุงูุฉ ุงูุนููุงุก ุงููุดุทูู ูุฐูู ุงูุฃุฑุตุฏุฉ');
    console.log('6. โ ุญูุงูุฉ ุงูุฃุตูู ุงูุซุงุจุชุฉ ุงููุดุทุฉ');
    console.log('7. โ ุญูุงูุฉ ุงูุนููุงุช ุงูุฃุณุงุณูุฉ ูุงููุณุชุฎุฏูุฉ');
    console.log('8. โ ุฏุงูุฉ ุงุณุชุฑุฏุงุฏ ุงูุจูุงูุงุช ุงููุญุฐููุฉ');

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุชุทุจูู ูุธุงู ุญูุงูุฉ ุงูุจูุงูุงุช:', error);
    throw error;
  } finally {
    await sequelize.close();
  }
}

// ุชุดุบูู ุชุทุจูู ูุธุงู ุญูุงูุฉ ุงูุจูุงูุงุช
applyDataProtectionSystem()
  .then(() => {
    console.log('\n๐ ุงูุชูู ุชุทุจูู ูุธุงู ุญูุงูุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\n๐ฅ ูุดู ุชุทุจูู ูุธุงู ุญูุงูุฉ ุงูุจูุงูุงุช:', error);
    process.exit(1);
  });
