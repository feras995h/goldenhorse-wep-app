import models, { sequelize } from './src/models/index.js';

const { Account } = models;

// ุฏููู ุงูุญุณุงุจุงุช ุงููุงูู
const chartOfAccounts = [
  // ุงูุฃุตูู (Assets) - 1
  { code: '1', name: 'ุงูุฃุตูู', nameEn: 'Assets', type: 'asset', rootType: 'Asset', reportType: 'Balance Sheet', isGroup: true, parentCode: null },
  { code: '1.1', name: 'ุงูุฃุตูู ุงููุชุฏุงููุฉ', nameEn: 'Current Assets', type: 'asset', rootType: 'Asset', reportType: 'Balance Sheet', isGroup: true, parentCode: '1' },
  { code: '1.1.1', name: 'ุงูููุฏูุฉ ูุงูุจููู', nameEn: 'Cash and Banks', type: 'asset', rootType: 'Asset', reportType: 'Balance Sheet', isGroup: true, parentCode: '1.1' },
  { code: '1.1.1.1', name: 'ุงูุตูุฏูู', nameEn: 'Cash', type: 'asset', rootType: 'Asset', reportType: 'Balance Sheet', isGroup: false, parentCode: '1.1.1', balance: 500 },
  { code: '1.1.1.2', name: 'ุงูุจูู ุงูุฃููู', nameEn: 'National Bank', type: 'asset', rootType: 'Asset', reportType: 'Balance Sheet', isGroup: false, parentCode: '1.1.1', balance: 0 },
  { code: '1.1.1.3', name: 'ุจูู ุงูุฌูููุฑูุฉ', nameEn: 'Republic Bank', type: 'asset', rootType: 'Asset', reportType: 'Balance Sheet', isGroup: false, parentCode: '1.1.1', balance: 0 },
  
  { code: '1.1.2', name: 'ุงููุฏูููู', nameEn: 'Accounts Receivable', type: 'asset', isGroup: true, parentCode: '1.1' },
  { code: '1.1.2.1', name: 'ุนููุงุก', nameEn: 'Customers', type: 'asset', isGroup: false, parentCode: '1.1.2', balance: 0 },
  { code: '1.1.2.2', name: 'ุฃูุฑุงู ุงููุจุถ', nameEn: 'Notes Receivable', type: 'asset', isGroup: false, parentCode: '1.1.2', balance: 0 },
  
  { code: '1.1.3', name: 'ุงููุฎุฒูู', nameEn: 'Inventory', type: 'asset', isGroup: true, parentCode: '1.1' },
  { code: '1.1.3.1', name: 'ูุฎุฒูู ุงูุจุถุงุฆุน', nameEn: 'Merchandise Inventory', type: 'asset', isGroup: false, parentCode: '1.1.3', balance: 0 },
  { code: '1.1.3.2', name: 'ูุฎุฒูู ุงูููุงุฏ ุงูุฎุงู', nameEn: 'Raw Materials', type: 'asset', isGroup: false, parentCode: '1.1.3', balance: 0 },
  
  { code: '1.2', name: 'ุงูุฃุตูู ุงูุซุงุจุชุฉ', nameEn: 'Fixed Assets', type: 'asset', isGroup: true, parentCode: '1' },
  { code: '1.2.1', name: 'ุงูุฃุฑุงุถู', nameEn: 'Land', type: 'asset', isGroup: false, parentCode: '1.2', balance: 0 },
  { code: '1.2.2', name: 'ุงููุจุงูู', nameEn: 'Buildings', type: 'asset', isGroup: false, parentCode: '1.2', balance: 0 },
  { code: '1.2.3', name: 'ุงูุขูุงุช ูุงููุนุฏุงุช', nameEn: 'Machinery & Equipment', type: 'asset', isGroup: false, parentCode: '1.2', balance: 0 },
  { code: '1.2.4', name: 'ุงูุฃุซุงุซ ูุงูุชุฌููุฒุงุช', nameEn: 'Furniture & Fixtures', type: 'asset', isGroup: false, parentCode: '1.2', balance: 0 },
  { code: '1.2.5', name: 'ุงูุณูุงุฑุงุช', nameEn: 'Vehicles', type: 'asset', isGroup: false, parentCode: '1.2', balance: 0 },
  { code: '1.2.6', name: 'ุฃุฌูุฒุฉ ุงูุญุงุณูุจ', nameEn: 'Computer Equipment', type: 'asset', isGroup: false, parentCode: '1.2', balance: 0 },
  { code: '1.2.7', name: 'ูุฌูุน ุงูุงุณุชููุงู', nameEn: 'Accumulated Depreciation', type: 'asset', isGroup: false, parentCode: '1.2', balance: 0 },

  // ุงูุฎุตูู (Liabilities) - 2
  { code: '2', name: 'ุงูุฎุตูู', nameEn: 'Liabilities', type: 'liability', isGroup: true, parentCode: null },
  { code: '2.1', name: 'ุงูุฎุตูู ุงููุชุฏุงููุฉ', nameEn: 'Current Liabilities', type: 'liability', isGroup: true, parentCode: '2' },
  { code: '2.1.1', name: 'ุงูุฏุงุฆููู', nameEn: 'Accounts Payable', type: 'liability', isGroup: true, parentCode: '2.1' },
  { code: '2.1.1.1', name: 'ููุฑุฏูู', nameEn: 'Suppliers', type: 'liability', isGroup: false, parentCode: '2.1.1', balance: 0 },
  { code: '2.1.1.2', name: 'ุฃูุฑุงู ุงูุฏูุน', nameEn: 'Notes Payable', type: 'liability', isGroup: false, parentCode: '2.1.1', balance: 0 },
  
  { code: '2.1.2', name: 'ูุตุฑููุงุช ูุณุชุญูุฉ', nameEn: 'Accrued Expenses', type: 'liability', isGroup: false, parentCode: '2.1', balance: 0 },
  { code: '2.1.3', name: 'ุถุฑุงุฆุจ ูุณุชุญูุฉ', nameEn: 'Accrued Taxes', type: 'liability', isGroup: false, parentCode: '2.1', balance: 0 },
  
  { code: '2.2', name: 'ูุตุฑูู ุงูุงุณุชููุงู', nameEn: 'Depreciation Expense', type: 'expense', isGroup: false, parentCode: '2', balance: 0 },

  // ุญููู ุงูููููุฉ (Equity) - 3
  { code: '3', name: 'ุญููู ุงูููููุฉ', nameEn: 'Equity', type: 'equity', isGroup: true, parentCode: null },
  { code: '3.1', name: 'ุฑุฃุณ ุงููุงู', nameEn: 'Capital', type: 'equity', isGroup: false, parentCode: '3', balance: 0 },
  { code: '3.2', name: 'ุงูุฃุฑุจุงุญ ุงููุญุชุฌุฒุฉ', nameEn: 'Retained Earnings', type: 'equity', isGroup: false, parentCode: '3', balance: 0 },
  { code: '3.3', name: 'ุฃุฑุจุงุญ ุงูุนุงู ุงูุญุงูู', nameEn: 'Current Year Earnings', type: 'equity', isGroup: false, parentCode: '3', balance: 0 },

  // ุงูุฅูุฑุงุฏุงุช (Revenue) - 4
  { code: '4', name: 'ุงูุฅูุฑุงุฏุงุช', nameEn: 'Revenue', type: 'revenue', isGroup: true, parentCode: null },
  { code: '4.1', name: 'ุฅูุฑุงุฏุงุช ุงููุจูุนุงุช', nameEn: 'Sales Revenue', type: 'revenue', isGroup: false, parentCode: '4', balance: 0 },
  { code: '4.2', name: 'ุฅูุฑุงุฏุงุช ุงูุฎุฏูุงุช', nameEn: 'Service Revenue', type: 'revenue', isGroup: false, parentCode: '4', balance: 0 },
  { code: '4.3', name: 'ุฅูุฑุงุฏุงุช ุฃุฎุฑู', nameEn: 'Other Revenue', type: 'revenue', isGroup: false, parentCode: '4', balance: 0 },

  // ุงููุตุฑููุงุช (Expenses) - 5
  { code: '5', name: 'ุงููุตุฑููุงุช', nameEn: 'Expenses', type: 'expense', isGroup: true, parentCode: null },
  { code: '5.1', name: 'ุชูููุฉ ุงูุจุถุงุนุฉ ุงููุจุงุนุฉ', nameEn: 'Cost of Goods Sold', type: 'expense', isGroup: false, parentCode: '5', balance: 0 },
  { code: '5.2', name: 'ูุตุฑููุงุช ุงูุชุดุบูู', nameEn: 'Operating Expenses', type: 'expense', isGroup: true, parentCode: '5' },
  { code: '5.2.1', name: 'ููุงุฏ ูุธุงูุฉ', nameEn: 'Cleaning Supplies', type: 'expense', isGroup: false, parentCode: '5.2', balance: 300 },
  { code: '5.2.2', name: 'ุฑูุงุชุจ ุงูููุธููู', nameEn: 'Employee Salaries', type: 'expense', isGroup: false, parentCode: '5.2', balance: 0 },
  { code: '5.2.3', name: 'ุฅูุฌุงุฑ ุงูููุชุจ', nameEn: 'Office Rent', type: 'expense', isGroup: false, parentCode: '5.2', balance: 0 },
  { code: '5.2.4', name: 'ููุงุชูุฑ ุงูููุฑุจุงุก', nameEn: 'Electricity Bills', type: 'expense', isGroup: false, parentCode: '5.2', balance: 0 },
  { code: '5.2.5', name: 'ููุงุชูุฑ ุงููุงุชู', nameEn: 'Phone Bills', type: 'expense', isGroup: false, parentCode: '5.2', balance: 0 },
  { code: '5.3', name: 'ูุตุฑููุงุช ุฅุฏุงุฑูุฉ', nameEn: 'Administrative Expenses', type: 'expense', isGroup: false, parentCode: '5', balance: 0 },
  { code: '5.4', name: 'ูุตุฑููุงุช ูุงููุฉ', nameEn: 'Financial Expenses', type: 'expense', isGroup: false, parentCode: '5', balance: 0 }
];

async function restoreAccounts() {
  try {
    console.log('๐ ุจุฏุก ุงุณุชุนุงุฏุฉ ุฏููู ุงูุญุณุงุจุงุช...');
    
    // ุงูุชุญูู ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
    await sequelize.authenticate();
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ');
    
    // ุนุฏ ุงูุญุณุงุจุงุช ุงูููุฌูุฏุฉ
    const existingCount = await Account.count();
    console.log(`๐ ุนุฏุฏ ุงูุญุณุงุจุงุช ุงูููุฌูุฏุฉ ุญุงููุงู: ${existingCount}`);
    
    console.log('๐ ุณูุชู ุฅุถุงูุฉ ุงูุญุณุงุจุงุช ุงูููููุฏุฉ...');

    let addedCount = 0;
    let existingAccountsCount = 0;

    // ุฅูุดุงุก ุงูุญุณุงุจุงุช ุจุงูุชุฑุชูุจ ุงูุตุญูุญ (ุงูุขุจุงุก ุฃููุงู)
    for (const accountData of chartOfAccounts) {
      try {
        const existingAccount = await Account.findOne({ where: { code: accountData.code } });

        if (!existingAccount) {
          await Account.create({
            ...accountData,
            isActive: true,
            createdAt: new Date(),
            updatedAt: new Date()
          });
          console.log(`โ ุชู ุฅูุดุงุก ุงูุญุณุงุจ: ${accountData.code} - ${accountData.name}`);
          addedCount++;
        } else {
          console.log(`โญ๏ธ  ุงูุญุณุงุจ ููุฌูุฏ: ${accountData.code} - ${accountData.name}`);
          existingAccountsCount++;
        }
      } catch (error) {
        console.error(`โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุญุณุงุจ ${accountData.code}:`, error.message);
      }
    }

    const finalCount = await Account.count();
    console.log(`\n๐ ููุฎุต ุงูุนูููุฉ:`);
    console.log(`  - ุงูุญุณุงุจุงุช ุงูููุฌูุฏุฉ ูุณุจูุงู: ${existingAccountsCount}`);
    console.log(`  - ุงูุญุณุงุจุงุช ุงููุถุงูุฉ: ${addedCount}`);
    console.log(`  - ุงูุนุฏุฏ ุงูููุงุฆู ููุญุณุงุจุงุช: ${finalCount}`);

    if (addedCount > 0) {
      console.log(`๐ ุชู ุฅุถุงูุฉ ${addedCount} ุญุณุงุจ ุฌุฏูุฏ ุจูุฌุงุญ!`);
    } else {
      console.log(`โ ุฌููุน ุงูุญุณุงุจุงุช ููุฌูุฏุฉ ูุณุจูุงู`);
    }
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงุณุชุนุงุฏุฉ ุงูุญุณุงุจุงุช:', error);
  } finally {
    await sequelize.close();
    console.log('๐ ุชู ุฅุบูุงู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
  }
}

restoreAccounts();
