{
  "name": "golden-horse-server",
  "version": "1.0.0",
  "description": "Backend server for Golden Horse Shipping Services",
  "type": "module",
  "main": "src/server.js",
  "scripts": {
    "dev": "nodemon src/server.js",
    "start": "node src/server.js",
    "db:migrate": "sequelize-cli db:migrate",
    "db:seed": "sequelize-cli db:seed:all",
    "db:reset": "sequelize-cli db:drop && sequelize-cli db:create && sequelize-cli db:migrate && sequelize-cli db:seed:all",
    "db:test-connection": "node -e \"import('./src/models/index.js').then(({sequelize}) => sequelize.authenticate().then(() => { console.log('✅ Database connection successful'); process.exit(0); }).catch(err => { console.error('❌ Database connection failed:', err.message); process.exit(1); }))\"",
    "db:show-tables": "node -e \"import('./src/models/index.js').then(({sequelize}) => sequelize.showAllSchemas().then(schemas => { console.log('📊 Database schemas:', schemas); process.exit(0); }).catch(err => { console.error('❌ Error showing schemas:', err.message); process.exit(1); }))\"",
    "backup-json-data": "node src/scripts/migrateData.js backup",
    "migrate-data": "node src/scripts/migrateData.js",
    "verify-migration": "node src/scripts/migrateData.js verify",
    "clear-data": "node src/scripts/clearData.js",
    "reset-counters": "node src/scripts/clearData.js reset-counters",
    "seed-basic-data": "node src/scripts/seedBasicData.js",
    "seed-dummy-data": "node src/scripts/seedDummyData.js",
    "seed-dummy-data-simple": "node src/scripts/seedDummyDataSimple.js",
    "seed-dummy-data-final": "node src/scripts/seedDummyDataFinal.js",
    "seed-dummy-data-working": "node src/scripts/seedDummyDataWorking.js",
    "seed-dummy-data-complete": "node src/scripts/seedDummyDataComplete.js",
    "ensure-main-accounts": "node src/scripts/ensureMainAccounts.js",
    "clean-database": "node src/scripts/cleanDatabase.js",
    "setup-production": "node src/scripts/setupProduction.js",
    "prepare-production": "npm run clean-database && npm run setup-production && npm run ensure-main-accounts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:verbose": "TEST_VERBOSE=true jest --verbose",
    "test:unit": "jest --selectProjects=\"Unit Tests\"",
    "test:integration": "jest --selectProjects=\"Integration Tests\"",
    "test:e2e": "jest --selectProjects=\"E2E Tests\"",
    "test:business": "jest --selectProjects=\"Business Logic Tests\"",
    "test:models": "jest tests/models",
    "test:services": "jest tests/services",
    "test:financial": "jest tests/integration/financial.test.js",
    "test:accounting": "jest tests/business-logic/accounting-rules.test.js",
    "check-deployment": "node src/scripts/checkDeployment.js",
    "🛡️ SAFE SCRIPTS - للاستخدام الإنتاجي": "",
    "backup-and-migrate": "node scripts/safeBackupAndMigration.js",
    "safe-deploy": "node scripts/safeDeploymentSetup.js",
    "analyze-data": "node scripts/analyzeCurrentAccounts.js",
    "check-safety": "node scripts/checkHierarchy.js",
    "deploy-production": "npm run backup-and-migrate && npm run safe-deploy",
    "deploy-safe": "npm run safe-deploy && npm run check-safety",
    "⚠️ DANGER ZONE - خطر على البيانات": "",
    "⚠️-DANGER-setup-accounts": "node scripts/createComprehensiveChartOfAccounts.js",
    "⚠️-DANGER-deployment-setup": "node scripts/deploymentSetup.js",
    "⚠️-DANGER-deploy": "npm run ⚠️-DANGER-deployment-setup && node src/scripts/checkDeployment.js && npm run db:migrate",
    "⚠️-DANGER-deploy-full": "npm run ⚠️-DANGER-setup-accounts && npm run ⚠️-DANGER-deployment-setup && npm run db:migrate && npm run seed-basic-data",
    "📊 ANALYSIS TOOLS - أدوات التحليل": "",
    "fix-hierarchy": "node scripts/fixAccountHierarchy.js"
  },
  "dependencies": {
    "axios": "^1.11.0",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^7.5.1",
    "express-validator": "^7.2.1",
    "fs-extra": "^11.3.1",
    "helmet": "^8.1.0",
    "jsonwebtoken": "^9.0.2",
    "multer": "^2.0.2",
    "node-cron": "^4.2.1",
    "node-fetch": "^3.3.2",
    "path": "^0.12.7",
    "pg": "^8.16.3",
    "pg-hstore": "^2.3.4",
    "sequelize": "^6.37.7",
    "socket.io": "^4.8.1",
    "sqlite3": "^5.1.7",
    "uuid": "^11.1.0",
    "zod": "^4.1.5"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.28.3",
    "@testing-library/jest-dom": "^6.1.5",
    "babel-jest": "^29.7.0",
    "jest": "^30.1.3",
    "nodemon": "^3.0.2",
    "sequelize-cli": "^6.6.2",
    "supertest": "^7.1.4"
  }
}
